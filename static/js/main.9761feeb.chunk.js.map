{"version":3,"sources":["components/Skills.js","components/Problem.js","components/Life.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Skills","className","href","src","alt","Problem","Life","Home","to","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mVA8BeA,G,MA5BA,WAGX,OACI,yBAAKC,UAAU,UACf,6BACI,yBAAKA,UAAU,gCACvB,8DACA,uBAAGC,KAAK,KAAR,UAGQ,iGACA,yBAAKC,IAAI,0IAA0IC,IAAI,KAEvJ,yBAAKH,UAAU,QACf,4BACI,2CACA,yCACA,4CACA,uDACA,sDCQDI,G,MA5BC,WAGZ,OACI,yBAAKJ,UAAU,WAEf,6BACI,yBAAKA,UAAU,gCACvB,8DACA,uBAAGC,KAAK,KAAR,UAGQ,0EACA,yBAAKC,IAAI,mGAAmGC,IAAI,KAEhH,yBAAKH,UAAU,QACf,4BACI,qGACA,2FACA,kHACA,uFACA,gICSDK,G,MA9BF,WAGT,OACI,yBAAKL,UAAU,QAEf,6BACI,yBAAKA,UAAU,gCACvB,8DACA,uBAAGC,KAAK,KAAR,UAGQ,4FAEA,yBAAKC,IAAI,kEAAkEC,IAAI,KAE/E,yBAAKH,UAAU,QACX,wBAAIA,UAAU,QACV,kGACA,iFACA,8GACA,uFACA,+GCGLM,G,6KAlBP,OACI,yBAAKN,UAAU,OAC3B,8DAEA,6BACA,6BACA,4BACM,4BAAI,kBAAC,IAAD,CAAOA,UAAU,MAAMO,GAAG,WAA1B,qEACJ,6BACA,4BAAI,kBAAC,IAAD,CAAMP,UAAU,MAAMO,GAAG,YAAzB,qEACJ,6BACA,4BAAI,kBAAC,IAAD,CAAMP,UAAU,MAAMO,GAAG,SAAzB,2F,GAjBSC,cCwBJC,E,uKAlBb,OACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOK,KAAK,UAAUC,UAAWb,IACjC,kBAAC,IAAD,CAAOY,KAAK,WAAWC,UAAWR,IAClC,kBAAC,IAAD,CAAOO,KAAK,QAAQC,UAAWP,U,GATrBG,aCKEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9761feeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Skill.css';\r\nconst Skills = () => {\r\n\r\n\r\n    return(\r\n        <div className=\"Skills\">\r\n        <nav>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n    <h1> Info about Chemical Engineers</h1>\r\n    <a href=\"/\">Home</a>\r\n        </nav>\r\n            </nav>\r\n            <h1>Chemical Engineers Have Multiple Math And Science Skills Like ...</h1>\r\n            <img src=\"https://www.timeshighereducation.com/sites/default/files/styles/the_breaking_news_image_style/public/istock-144285630.jpg?itok=wVZmCDNo\" alt=\"\"/>\r\n            \r\n            <div className=\"list\">\r\n            <ul>\r\n                <li>Mathematics</li>\r\n                <li>Chemistry</li>\r\n                <li>Aerodynamics</li>\r\n                <li>Electrical Engineering </li>\r\n                <li>Material Sciences</li>\r\n        \r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills","import React from 'react'\r\nimport '../css/Problem.css';\r\nconst Problem = () => {\r\n\r\n\r\n    return(\r\n        <div className='Problem'>\r\n\r\n        <nav>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n    <h1> Info about Chemical Engineers</h1>\r\n    <a href=\"/\">Home</a>\r\n        </nav>\r\n            </nav>\r\n            <h1>Chemical Engineers Have The Ability to ...</h1>\r\n            <img src=\"https://simulatelive.com/images/page/225/article_full/1430232943_Depositphotos_19466575_orig.jpg\" alt=\"\"/>\r\n            \r\n            <div className=\"list\">\r\n            <ul>\r\n                <li>Create chemicals which help preserve the shelf life of food and drink</li>\r\n                <li>Support the IT hardware industry to develop processor chips</li>\r\n                <li>Generate material colouring agents which can be used in the production of clothing</li>\r\n                <li>Work with pharmaceutical companies to develop new drugs</li>\r\n                <li>Identify ways in which oil, petrol and other fuels are refined in order to reduce pollution</li>\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Problem","import React from 'react'\r\nimport '../css/Life.css';\r\nconst Life = () => {\r\n\r\n\r\n    return(\r\n        <div className=\"Life\">\r\n\r\n        <nav>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n    <h1> Info about Chemical Engineers</h1>\r\n    <a href=\"/\">Home</a>\r\n        </nav>\r\n            </nav>\r\n            <h1> Chemical Engineers Solve Real World Challenges Including...</h1>\r\n\r\n            <img src=\"https://i.vimeocdn.com/video/926072895.webp?mw=1700&mh=957&q=70\" alt=\"\"/>\r\n            \r\n            <div className=\"list\">\r\n                <ul className=\"Life\">\r\n                    <li>How to prevent the spread of disease in remote parts of the world.</li>\r\n                    <li>How to ensure that food remains fresh for longer.</li>\r\n                    <li>Those in the fire service by creating clothing with heat resistant properties.</li>\r\n                    <li>Worthy challenges of making plastic bags biodegradable.</li>\r\n                    <li>Creating cleaning agents which are less toxic and hazardous to the health.</li>\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Life","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/Home.css'\r\nclass Home extends Component{\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"App\">\r\n<h1> Info about Chemical Engineers</h1>\r\n\r\n<br/>\r\n<br/>\r\n<ul>\r\n      <li><Link  className=\"lik\" to=\"/Skills\"> How Chemical Engineers use different math and science subjects </Link></li>\r\n      <br/>\r\n      <li><Link className=\"lik\" to=\"/Problem\"> How Chemical Engineers work with other subjects and industries </Link></li>\r\n      <br/>\r\n      <li><Link className=\"lik\" to=\"/Life\">How Chemical Engineers use knowledge of chemicals to solve real world problems. </Link></li>\r\n </ul>     \r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\r\nimport Skills from './components/Skills';\r\nimport Problem from './components/Problem';\r\nimport Life from './components/Life';\r\nimport Home from './components/Home'\r\n\r\nclass App extends Component{\r\nrender(){\r\n  return (\r\n  <BrowserRouter>\r\n     \r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/Skills' component={Skills}/>\r\n        <Route path='/Problem' component={Problem}/>\r\n        <Route path='/Life' component={Life}/>\r\n      </Switch>\r\n\r\n   \r\n    </BrowserRouter>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}